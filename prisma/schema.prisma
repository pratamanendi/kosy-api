generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          String    @unique @default(uuid())
  username    String?
  email       String    @unique
  password    String
  employee_id String
  role        Int?
  created_at  DateTime  @default(now())
  updated_at  DateTime?
  deleted_at  DateTime?
  employee    Employee  @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Employee {
  id               String          @unique @default(uuid())
  name             String
  npwp             String?
  alamat           String?
  created_at       DateTime        @default(now())
  updated_at       DateTime?
  deleted_at       DateTime?
  daily_activities DailyActivity[]
  Users            Users[]
}

model DailyActivity {
  id          String    @unique @default(uuid())
  employee_id String
  title       String
  description String
  created_at  DateTime  @default(now())
  updated_at  DateTime?
  deleted_at  DateTime?
  employee    Employee  @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Products {
  id          String        @unique @default(uuid())
  name        String
  description String
  thumbnail   String
  created_at  DateTime      @default(now())
  created_by  String?
  updated_at  DateTime?
  updated_by  String?
  deleted_at  DateTime?
  deleted_by  String?
  meta        ProductMeta[]
}

model ProductMeta {
  id         String   @unique @default(uuid())
  product_id String
  meta_key   String
  meta_value String
  product    Products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([product_id, meta_key], name: "product_id_meta_key")
}
